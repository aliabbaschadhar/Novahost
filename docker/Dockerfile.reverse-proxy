FROM oven/bun:alpine AS baseimage


# Stage 1: Install dependencies
FROM baseimage AS deps

WORKDIR /home/app

# Copy workspace configuration
COPY package.json bun.lock turbo.json ./

# Create directory structure and copy all package.json files
COPY apps/web/package.json ./apps/web/package.json
COPY apps/api-server/package.json ./apps/api-server/package.json
COPY apps/reverse-proxy/package.json ./apps/reverse-proxy/package.json
COPY apps/build-server/package.json ./apps/build-server/package.json
COPY packages/prismaDB/package.json ./packages/prismaDB/package.json
COPY packages/eslint-config/package.json ./packages/eslint-config/package.json
COPY packages/typescript-config/package.json ./packages/typescript-config/package.json

# Install dependencies
RUN bun install --frozen-lockfile


# Stage 2: Production runtime
FROM baseimage AS runner

WORKDIR /home/app

# Create non-root user
RUN addgroup --system --gid 1001 novahost && \
    adduser --system --uid 1001 --ingroup novahost appUser

# Copy dependencies and source with proper ownership
COPY --from=deps --chown=appUser:novahost /home/app/node_modules ./node_modules
COPY --from=deps --chown=appUser:novahost /home/app/package.json ./package.json
COPY --from=deps --chown=appUser:novahost /home/app/bun.lock ./bun.lock
COPY --from=deps --chown=appUser:novahost /home/app/turbo.json ./turbo.json

# Copy source code with proper ownership
COPY --chown=appUser:novahost apps/reverse-proxy/ ./apps/reverse-proxy
COPY --chown=appUser:novahost packages/ ./packages

# Switch to non-root user
USER appUser

EXPOSE 9010

CMD ["bun", "run", "start:proxy"]