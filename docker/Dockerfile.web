FROM oven/bun:alpine AS baseimage

# Stage 1: Install deps
FROM baseimage AS deps

WORKDIR /home/app

COPY package.json bun.lock turbo.json ./
COPY apps/web/package.json ./apps/web/
COPY apps/api-server/package.json ./apps/api-server/
COPY apps/reverse-proxy/package.json ./apps/reverse-proxy/
COPY packages/prismaDB/package.json ./packages/prismaDB/
COPY packages/eslint-config/package.json ./packages/eslint-config/
COPY packages/typescript-config/package.json ./packages/typescript-config/

RUN bun install 

# Stage 2: Build stage
FROM baseimage AS builder

WORKDIR /home/app

RUN apk add --no-cache openssl

COPY --from=deps /home/app/node_modules ./node_modules
COPY --from=deps /home/app/package.json ./package.json
COPY --from=deps /home/app/turbo.json ./turbo.json
COPY --from=deps /home/app/bun.lock ./bun.lock

# Copy source code
COPY packages ./packages
COPY apps/web ./apps/web

RUN bun run db:generate

# Build Next.js with placeholder DATABASE_URL (Prisma client will skip connection during build)
RUN DATABASE_URL="postgresql://placeholder:placeholder@placeholder:5432/placeholder" \
    NEXTAUTH_URL="https://novahost.ybro.tech" \
    NEXTAUTH_SECRET="placeholder-secret" \
    bun run build# Stage 3: Production Runtime
FROM baseimage AS runner

WORKDIR /home/app

RUN apk add --no-cache openssl

RUN addgroup --system --gid 1001 novahost && \
    adduser --system --uid 1001 --ingroup novahost appUser

# Copy built Next.js app
COPY --from=builder --chown=appUser:novahost /home/app/apps/web/.next ./apps/web/.next
COPY --from=builder --chown=appUser:novahost /home/app/apps/web/public ./apps/web/public
COPY --from=builder --chown=appUser:novahost /home/app/apps/web/package.json ./apps/web/package.json
COPY --from=builder --chown=appUser:novahost /home/app/node_modules ./node_modules
COPY --from=builder --chown=appUser:novahost /home/app/package.json ./package.json
COPY --from=builder --chown=appUser:novahost /home/app/packages ./packages

USER appUser

EXPOSE 3000

CMD ["bun", "run", "start:web"]