FROM oven/bun:alpine AS baseimage

# Stage 1: Install ALL dependencies (needed for build)
FROM baseimage AS deps
WORKDIR /home/app
COPY package.json bun.lock turbo.json ./
COPY apps/web/package.json ./apps/web/
COPY apps/api-server/package.json ./apps/api-server/
COPY apps/reverse-proxy/package.json ./apps/reverse-proxy/
COPY packages/prismaDB/package.json ./packages/prismaDB/
COPY packages/eslint-config/package.json ./packages/eslint-config/
COPY packages/typescript-config/package.json ./packages/typescript-config/

RUN bun install

# Stage 2: Build stage
FROM baseimage AS builder
WORKDIR /home/app
RUN apk add --no-cache openssl

COPY --from=deps /home/app/node_modules ./node_modules
COPY --from=deps /home/app/package.json ./package.json
COPY --from=deps /home/app/turbo.json ./turbo.json
COPY --from=deps /home/app/bun.lock ./bun.lock

# Copy source code
COPY packages ./packages
COPY apps/web ./apps/web

RUN bun run db:generate

# Build Next.js with dummy environment variables for compilation
ENV DATABASE_URL="postgresql://dummy:dummy@localhost:5432/dummy" 
ENV NEXTAUTH_URL="https://localhost:3000" 
ENV NEXTAUTH_SECRET="dummy-secret-for-build" 
ENV GOOGLE_CLIENT_ID="dummy-google-client-id" 
ENV GOOGLE_CLIENT_SECRET="dummy-google-client-secret" 
ENV GITHUB_CLIENT_ID="dummy-github-client-id" 
ENV GITHUB_CLIENT_SECRET="dummy-github-client-secret" 
ENV RESEND_API_KEY="dummy-resend-api-key" 
ENV EMAIL_FROM="noreply@example.com" 
RUN bun run build

# Stage 3: Production Runtime (OPTIMIZED)
FROM oven/bun:alpine AS runner
WORKDIR /home/app

RUN apk add --no-cache openssl && \
    addgroup --system --gid 1001 novahost && \
    adduser --system --uid 1001 --ingroup novahost appUser

# Copy only Next.js build output and essential files
COPY --from=builder --chown=appUser:novahost /home/app/apps/web/.next/standalone ./
COPY --from=builder --chown=appUser:novahost /home/app/apps/web/.next/static ./apps/web/.next/static
COPY --from=builder --chown=appUser:novahost /home/app/apps/web/public ./apps/web/public

# Copy only runtime-needed packages (prisma client)
COPY --from=builder --chown=appUser:novahost /home/app/node_modules/.prisma ./node_modules/.prisma
COPY --from=builder --chown=appUser:novahost /home/app/node_modules/@prisma ./node_modules/@prisma

USER appUser
EXPOSE 3000

CMD ["node", "apps/web/server.js"]