name: Deploy Whole Monorepo

on:
  push: 
    branches: [main]
    paths:
      - "apps/**"
      - "packages/prismaDB/**"
      - "docker/**"

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service:
          - name: api-server
            dockerfile: docker/Dockerfile.api-server
            paths:
              - "apps/api-server/**"
              - "packages/prismaDB/**"

          - name: web
            dockerfile: docker/Dockerfile.web
            paths:
              - "apps/web/**"
              - "packages/prismaDB/**"

          - name: reverse-proxy
            dockerfile: docker/Dockerfile.reverse-proxy
            paths:
              - "apps/reverse-proxy/**"
              - "packages/prismaDB/**"
          
          - name: build-server
            dockerfile: docker/Dockerfile.build-server
            paths:
              - "apps/build-server/**"
  
    steps:
      - name: Checkout the code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # ensures full git commit history is fetched
      
      - name: Login Docker
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PAT }}
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Detect changed service paths
        id: filter
        uses: dorny/paths-filter@v2
        with:
          filters: |
            api-server:
              - 'apps/api-server/**'
              - 'packages/prismaDB/**'
              - 'docker/Dockerfile.api-server'
            web:
              - 'apps/web/**'
              - 'packages/prismaDB/**'
              - 'docker/Dockerfile.web'
            reverse-proxy:
              - 'apps/reverse-proxy/**'
              - 'packages/prismaDB/**'
              - 'docker/Dockerfile.reverse-proxy'
            build-server:
              - 'apps/build-server/**'
              - 'docker/Dockerfile.build-server'

      - name: Build and push Docker image
        if: steps.filter.outputs[matrix.service.name] == 'true'
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ${{ matrix.service.dockerfile }}
          push: true
          tags: |
            aliabbaschadhar003/novahost-${{ matrix.service.name }}:${{ github.sha }}
            aliabbaschadhar003/novahost-${{ matrix.service.name }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

  # Update my-infra repository with new image tags
  update-deployment:
    needs: build
    runs-on: ubuntu-latest
    if: ${{ needs.build.result == 'success' }}
    
    steps:
      - name: Checkout my-infra repository
        uses: actions/checkout@v4
        with:
          repository: aliabbaschadhar/my-infra
          token: ${{ secrets.GH_PAT }}
          path: my-infra

      - name: Update image tags in values.yaml
        run: |
          cd my-infra/apps/novahost
          
          # Update image tags to latest commit SHA
          sed -i "s|tag: \".*\"|tag: \"${{ github.sha }}\"|g" values.yaml
          
          # Commit changes
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add values.yaml
          git commit -m "ðŸš€ Update Novahost image tags to ${{ github.sha }}" || exit 0
          git push

      - name: ArgoCD Auto-Sync Notification
        run: |
          echo "âœ… Values updated - ArgoCD App of Apps will auto-sync Novahost deployment"